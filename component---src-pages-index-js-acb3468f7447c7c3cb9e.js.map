{"version":3,"file":"component---src-pages-index-js-acb3468f7447c7c3cb9e.js","mappings":"+HAAe,SAASA,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,E,yFCkET,EAjEME,SAAAA,GACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEC,KAAM,EAAKC,KAAM,EAAKC,UAAW,GAEhD,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,MACxB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,MALP,GADfP,EAAAA,EAAAA,GAAAA,EAAAA,GAOH,kBA6CA,OA7CA,EAEDM,iBAAA,SAAiBG,GACfC,KAAKC,SAAS,CAAER,KAAMM,EAAMG,OAAOC,QACnCH,KAAKC,SAAS,CAAEP,KAA4B,KAArBK,EAAMG,OAAOC,QACpCH,KAAKC,SAAS,CAAEN,UAAYI,EAAMG,OAAOC,MAAQC,WAAWJ,KAAKT,MAAMc,KAAKC,SAASC,YAAY,GAArC,eAC7D,EACDT,iBAAA,SAAiBC,GACfC,KAAKC,SAAS,CAAEP,KAAMK,EAAMG,OAAOC,QACnCH,KAAKC,SAAS,CAAER,KAAOM,EAAMG,OAAOC,MAAS,OAC7CH,KAAKC,SAAS,CAAEN,UAAaI,EAAMG,OAAOC,MAAS,KAAiBC,WAAWJ,KAAKT,MAAMc,KAAKC,SAASC,YAAY,GAArC,eAChF,EAEDC,OAAA,WACE,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,SACX,uBAAKC,UAAU,0BACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,OACb,mCAAWV,KAAKT,MAAMc,KAAKC,SAASC,YAAY,GAArC,cAGf,uBAAKG,UAAU,OACb,uBAAKA,UAAU,OACb,qCAEE,yBAAOC,KAAK,SAASR,MAAOH,KAAKR,MAAMC,KAAMmB,KAAK,OAAOC,SAAUb,KAAKJ,qBAG5E,uBAAKc,UAAU,OACb,qCAEE,yBAAOC,KAAK,SAASR,MAAOH,KAAKR,MAAME,KAAMkB,KAAK,OAAOC,SAAUb,KAAKF,sBAI9E,uBAAKY,UAAU,OACb,uBAAKA,UAAU,OACb,sCAAcV,KAAKR,MAAMG,gBAMpC,EApDGL,CAAkBwB,EAAAA","sources":["webpack://mojo-web-calculator/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://mojo-web-calculator/./src/pages/index.js"],"sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import * as React from \"react\"\nimport { graphql } from 'gatsby'\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nclass IndexPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { chia: 0.0, mojo: 0.0, chiaPrice: 0.0};\n\n    this.handleChiaChange = this.handleChiaChange.bind(this);\n    this.handleMojoChange = this.handleMojoChange.bind(this);\n  }\n\n  handleChiaChange(event) {\n    this.setState({ chia: event.target.value });\n    this.setState({ mojo: (event.target.value * 1000000000000) });\n    this.setState({ chiaPrice: (event.target.value * parseFloat(this.props.data.chiaInfo.block_state[0][\"chia_price\"])) });\n  }\n  handleMojoChange(event) {\n    this.setState({ mojo: event.target.value });\n    this.setState({ chia: (event.target.value /  1000000000000)});\n    this.setState({ chiaPrice: ((event.target.value /  1000000000000) * parseFloat(this.props.data.chiaInfo.block_state[0][\"chia_price\"])) });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Seo title=\"Home\" />\n        <div className=\"container text-center \">\n          <div className=\"row\">\n            <div className=\"col\">\n              <h4>XCH: ${this.props.data.chiaInfo.block_state[0][\"chia_price\"]}</h4>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <label>\n                Chia:\n                <input type=\"number\" value={this.state.chia} name=\"chia\" onChange={this.handleChiaChange} />\n              </label>\n            </div>\n            <div className=\"col\">\n              <label>\n                Mojo:\n                <input type=\"number\" value={this.state.mojo} name=\"mojo\" onChange={this.handleMojoChange} />\n              </label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <h4> Worth: ${this.state.chiaPrice}</h4>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\n    query IndexPageQuery {\n        chiaInfo {\n            block_state {\n                chia_price\n            }\n        }\n    }\n`\n\nexport default IndexPage\n"],"names":["_assertThisInitialized","self","ReferenceError","IndexPage","props","state","chia","mojo","chiaPrice","handleChiaChange","bind","handleMojoChange","event","this","setState","target","value","parseFloat","data","chiaInfo","block_state","render","title","className","type","name","onChange","React"],"sourceRoot":""}